/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.omdbapi.client.models

import io.kotlintest.specs.ShouldSpec

class CombinedResultTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CombinedResult
        //val modelInstance = CombinedResult()

        // to test the property `response`
        should("test response") {
            // uncomment below to test the property
            //modelInstance.response shouldBe ("TODO")
        }

        // to test the property `actors`
        should("test actors") {
            // uncomment below to test the property
            //modelInstance.actors shouldBe ("TODO")
        }

        // to test the property `awards`
        should("test awards") {
            // uncomment below to test the property
            //modelInstance.awards shouldBe ("TODO")
        }

        // to test the property `boxOffice`
        should("test boxOffice") {
            // uncomment below to test the property
            //modelInstance.boxOffice shouldBe ("TODO")
        }

        // to test the property `country`
        should("test country") {
            // uncomment below to test the property
            //modelInstance.country shouldBe ("TODO")
        }

        // to test the property `DVD`
        should("test DVD") {
            // uncomment below to test the property
            //modelInstance.DVD shouldBe ("TODO")
        }

        // to test the property `director`
        should("test director") {
            // uncomment below to test the property
            //modelInstance.director shouldBe ("TODO")
        }

        // to test the property `genre`
        should("test genre") {
            // uncomment below to test the property
            //modelInstance.genre shouldBe ("TODO")
        }

        // to test the property `language`
        should("test language") {
            // uncomment below to test the property
            //modelInstance.language shouldBe ("TODO")
        }

        // to test the property `metascore`
        should("test metascore") {
            // uncomment below to test the property
            //modelInstance.metascore shouldBe ("TODO")
        }

        // to test the property `plot`
        should("test plot") {
            // uncomment below to test the property
            //modelInstance.plot shouldBe ("TODO")
        }

        // to test the property `poster`
        should("test poster") {
            // uncomment below to test the property
            //modelInstance.poster shouldBe ("TODO")
        }

        // to test the property `production`
        should("test production") {
            // uncomment below to test the property
            //modelInstance.production shouldBe ("TODO")
        }

        // to test the property `rated`
        should("test rated") {
            // uncomment below to test the property
            //modelInstance.rated shouldBe ("TODO")
        }

        // to test the property `released`
        should("test released") {
            // uncomment below to test the property
            //modelInstance.released shouldBe ("TODO")
        }

        // to test the property `runtime`
        should("test runtime") {
            // uncomment below to test the property
            //modelInstance.runtime shouldBe ("TODO")
        }

        // to test the property `search`
        should("test search") {
            // uncomment below to test the property
            //modelInstance.search shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `website`
        should("test website") {
            // uncomment below to test the property
            //modelInstance.website shouldBe ("TODO")
        }

        // to test the property `writer`
        should("test writer") {
            // uncomment below to test the property
            //modelInstance.writer shouldBe ("TODO")
        }

        // to test the property `year`
        should("test year") {
            // uncomment below to test the property
            //modelInstance.year shouldBe ("TODO")
        }

        // to test the property `imdbID`
        should("test imdbID") {
            // uncomment below to test the property
            //modelInstance.imdbID shouldBe ("TODO")
        }

        // to test the property `imdbRating`
        should("test imdbRating") {
            // uncomment below to test the property
            //modelInstance.imdbRating shouldBe ("TODO")
        }

        // to test the property `imdbVotes`
        should("test imdbVotes") {
            // uncomment below to test the property
            //modelInstance.imdbVotes shouldBe ("TODO")
        }

        // to test the property `tomatoConsensus`
        should("test tomatoConsensus") {
            // uncomment below to test the property
            //modelInstance.tomatoConsensus shouldBe ("TODO")
        }

        // to test the property `tomatoFresh`
        should("test tomatoFresh") {
            // uncomment below to test the property
            //modelInstance.tomatoFresh shouldBe ("TODO")
        }

        // to test the property `tomatoImage`
        should("test tomatoImage") {
            // uncomment below to test the property
            //modelInstance.tomatoImage shouldBe ("TODO")
        }

        // to test the property `tomatoMeter`
        should("test tomatoMeter") {
            // uncomment below to test the property
            //modelInstance.tomatoMeter shouldBe ("TODO")
        }

        // to test the property `tomatoRating`
        should("test tomatoRating") {
            // uncomment below to test the property
            //modelInstance.tomatoRating shouldBe ("TODO")
        }

        // to test the property `tomatoReviews`
        should("test tomatoReviews") {
            // uncomment below to test the property
            //modelInstance.tomatoReviews shouldBe ("TODO")
        }

        // to test the property `tomatoRotten`
        should("test tomatoRotten") {
            // uncomment below to test the property
            //modelInstance.tomatoRotten shouldBe ("TODO")
        }

        // to test the property `tomatoURL`
        should("test tomatoURL") {
            // uncomment below to test the property
            //modelInstance.tomatoURL shouldBe ("TODO")
        }

        // to test the property `tomatoUserMeter`
        should("test tomatoUserMeter") {
            // uncomment below to test the property
            //modelInstance.tomatoUserMeter shouldBe ("TODO")
        }

        // to test the property `tomatoUserRating`
        should("test tomatoUserRating") {
            // uncomment below to test the property
            //modelInstance.tomatoUserRating shouldBe ("TODO")
        }

        // to test the property `tomatoUserReviews`
        should("test tomatoUserReviews") {
            // uncomment below to test the property
            //modelInstance.tomatoUserReviews shouldBe ("TODO")
        }

        // to test the property `totalResults`
        should("test totalResults") {
            // uncomment below to test the property
            //modelInstance.totalResults shouldBe ("TODO")
        }

        // to test the property `totalSeasons`
        should("test totalSeasons") {
            // uncomment below to test the property
            //modelInstance.totalSeasons shouldBe ("TODO")
        }

    }
}
